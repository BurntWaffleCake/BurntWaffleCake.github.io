// ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩
// DO NOT ALTER THE TEXT BETWEEN THESE LINES =========={M{E{R{L{I{N{1}N}I}L}R}E}M}=====================================
let unsortedIntegers = [5, 1, 4, 2, 8]
// DO NOT ALTER THE TEXT BETWEEN THESE LINES =========={M{E{R{L{I{N{1}N}I}L}R}E}M}=====================================
// ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧

// Add your code below:
func min(starting:Int, array: [Int]) -> [Int] {
    var minIndex:Int? = nil
    var minCount:Int = 0
    for (count,index) in array.enumerated() {
        if count >= starting {
            if minIndex != nil {
                if minIndex! > index {
                    minIndex = index
                    minCount = count
                }
            } else {
                minIndex = index
                minCount = count
            }
        }
    }
    return [minCount, minIndex!]
}

func sortSelection(arrayInpt:[Int]) {
    var array = arrayInpt
    var pass = 0
    var totalSwaps = 0
    print("Pass: \(pass), Swaps: 0/\(totalSwaps), Array: \(array)")
    pass+=1
    var j = 0
    for _ in 1..<array.count {
        let i = min(starting:j,array:array)
        array.swapAt(i[0], j)
        totalSwaps += 1
        print("Pass: \(pass), Swaps: 1/\(totalSwaps), Array: \(array)")
        j+=1
        pass+=1
    }
}


func sortSelectionAlt(arrayInpt:[Int]) {
    var array = arrayInpt
    var pass = 0
    var totalSwaps = 0
    print("Pass: \(pass), Swaps: 0/\(totalSwaps), Array: \(array)")
    pass+=1
    var j = 0
    for a in 0..<array.count-1 {
        var i = array[a]
        var iInd = a
        for b in a..<array.count{
            if array[b] < i {
                i=array[b]
                iInd=b
            }
        }
        if array[a] != i {
            array.swapAt(a,iInd)
        }
        totalSwaps += 1
        print("Pass: \(pass), Swaps: 1/\(totalSwaps), Array: \(array)")
        j+=1
        pass+=1
    }
}

sortSelectionAlt(arrayInpt: unsortedIntegers)
